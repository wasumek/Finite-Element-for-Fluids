function shape = shape_functions(quads, elem_type)
% This functions computes the shape functions and their derivatives at the
% given quadrature points.


%% Generate shape functions.

    if elem_type == 1
    % Bilinear elements
        
        
    % Quadrature points coordinates in reference domain.
    xi = quads.points(:,1); eta = quads.points(:,2); 

    % Shape function values at quadrature point
    shape.N = [ (1-xi).*(1-eta)/4 ...
                (1+xi).*(1-eta)/4 ...
                (1+xi).*(1+eta)/4 ...
                (1-xi).*(1+eta)/4 ]; 

    % Shape function xi-derivative values at quadrature points
    shape.Nxi = [ (eta-1)/4 ...
                  (1-eta)/4 ...
                  (1+eta)/4 ...
                 -(1+eta)/4 ]; 

    % Shape function eta-derivative values at quadrature points
    shape.Neta = [ (xi-1)/4 ...
                  -(1+xi)/4 ...  
                   (1+xi)/4 ... 
                   (1-xi)/4 ]; 
    
    elseif elem_type == 2
    %Biquadratic elements
 
    % Quadrature points coordinates in reference domain.
    xi = quads.points(:,1); eta = quads.points(:,2); 
    
    
    % Shape function values at quadrature point
    shape.N = [ (1-xi) .* (1-eta) .*xi .* eta/4 ...
               -(1+xi) .* (1-eta) .*xi .* eta/4 ...
                (1+xi) .* (1+eta) .*xi .* eta/4 ...
               -(1-xi) .* (1+eta) .*xi .* eta/4 ...
               -(1-xi.^2) .* (1-eta) .* eta/2 ...
                (1+xi) .* (1-eta.^2) .* xi/2 ...
                (1-xi.^2) .* (1+eta) .* eta/2 ...
               -(1-xi) .* (1-eta.^2) .* xi/2 ...
                (1-xi.^2) .* (1-eta.^2)];

    % Shape function xi-derivative values at quadrature points
    shape.Nxi = [ (xi-1/2).*eta.*(eta-1)/2 ...
                  (xi+1/2).*eta.*(eta-1)/2 ...
                  (xi+1/2).*eta.*(eta+1)/2 ...
                  (xi-1/2).*eta.*(eta+1)/2 ...
                 -xi.*eta.*(eta-1) ...       
                  (xi+1/2).*(1-eta.^2) ...
                  -xi.*eta.*(eta+1) ...
                  (xi-1/2).*(1-eta.^2) ...
                 -2*xi.*(1-eta.^2)];
             
    % Shape function eta-derivative values at quadrature points
    shape.Neta = [ xi.*(xi-1).*(eta-1/2)/2 ...
                   xi.*(xi+1).*(eta-1/2)/2 ...
                   xi.*(xi+1).*(eta+1/2)/2 ...
                   xi.*(xi-1).*(eta+1/2)/2 ...
                   (1-xi.^2).*(eta-1/2) ...
                   xi.*(xi+1).*(-eta) ...
                   (1-xi.^2).*(eta+1/2) ...
                   xi.*(xi-1).*(-eta),   ...
                   (1-xi.^2).*(-2*eta)];              
               
    end
end